---
title: "Hands-on Exercise 1"
---

# 1 A Layered Grammar of Graphics: ggplot2 methods

## 1.1 Install and launching R packages

The code chunk below uses p-load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(tidyverse)
```

## 1.2 mporting the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# 2 Plotting a simple bar chart

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) + 
  geom_bar()
```

# 3 Plotting kinds of chart by geometric objects

## 3.1 Dotplot(with y-axis)

```{r}
ggplot(data = exam_data,
       aes(x = ENGLISH)) +
  geom_dotplot(dotsize = 0.5)
```

## 3.2 Dotplot(turn-off y-axis)

```{r}
ggplot(data = exam_data,
       aes(x = ENGLISH)) +
  geom_dotplot(binwidth = 2.5,
               dotsize = 0.5) +
  scale_y_continuous(NULL,
                     breaks = NULL)
```

## 3.3 Histogram (default bin is 30)

```{r}
ggplot(data = exam_data,
       aes(x = ENGLISH)) +
  geom_histogram()
```

## 3.4 Histogram (changeing geom())

```{r}
ggplot(data = exam_data,
       aes(x = ENGLISH)) +
  geom_histogram(bins = 20,
                 color = "black",
                 fill = "light blue")
```

## 3.5 Histogram (changeing aes())

```{r}
ggplot(data = exam_data,
       aes(x = ENGLISH,
           fill = GENDER)) +
  geom_histogram(bins = 20,
                 color = "grey30")
```

## 3.6 Density

```{r}
ggplot(data = exam_data,
       aes(x = ENGLISH,
           color = CLASS)) +
  geom_density()
```

## 3.7 Boxplot (with notch)

```{r}
ggplot(data = exam_data,
       aes(y = ENGLISH,
           x = GENDER)) +
  geom_boxplot(notch = TRUE)
```

## 3.8 Violin (Comparing multiple data distribution)

```{r}
ggplot(data = exam_data,
       aes(y = ENGLISH,
           x = GENDER)) +
  geom_violin()
```

## 3.9 Point

```{r}
ggplot(data = exam_data,
       aes(x = ENGLISH,
           y = MATHS)) +
  geom_point()
```

## 3.10 Combine ("jitter" refers to a technique used to add small random bariation to data points)

```{r}
ggplot(data = exam_data,
       aes(y = ENGLISH,
           x = GENDER)) +
  geom_boxplot() +
  geom_point(position = "jitter",
             size = 0.5)
```

# 4 Stat 

## 4.1 (Before)

```{r}
ggplot(data = exam_data,
       aes(y = ENGLISH, x = GENDER)) +
  geom_boxplot()
```

## 4.2 Stat (After)

```{r}
ggplot(data = exam_data,
       aes(y = ENGLISH,
           x = GENDER)) +
  geom_boxplot() +
  stat_summary(geom = "point",
               fun.y = "mean",
               colour = "red",
               size = 4)
```

## 4.3 Add curve on a scatterplot

```{r}
ggplot(data = exam_data,
       aes(y = ENGLISH, x = MATHS)) +
  geom_point() +
  geom_smooth(size = 0.5)
```

## 4.4 Facet_wrap

```{r}
ggplot(data = exam_data,
       aes(x = MATHS)) +
  geom_histogram(bins = 20) +
  facet_wrap(~ CLASS)
```

## 4.5 Facet_grid

```{r}
ggplot(data = exam_data,
       aes(x = MATHS)) +
  geom_histogram(bins = 20) +
  facet_grid(~ CLASS)
```

# 5 Working with coordinate 

## 5.1 (before)

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

## 5.2 Working with coordinate (after)

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```

## 5.3 Changing the y- and x-axis range (before)

```{r}
ggplot(data = exam_data,
       aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, size=0.5)
```

## 5.4 Changing the y- and x-axis range (after)

```{r}
ggplot(data = exam_data,
       aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, size=0.5) +
  coord_cartesian(xlim = c(0,100),
                  ylim = c(0,100))
```

# 6 Theme

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()
```

## 6.1 Classic

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()
```

## 6.2 Minimal

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) +
  geom_bar() +
  coord_flip() +
  theme_minimal()
```
