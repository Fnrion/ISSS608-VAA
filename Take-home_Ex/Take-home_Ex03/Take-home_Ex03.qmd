---
title: "Take_home_Ex03"
author: "Zou Jiaxun"
date: "Jun 7, 2024"
data-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---
# Vast Challenge 2024 Mini-Challenge 3

In this challenge, I will attempt to do the following:

- 1. Use visual analytics to identify the relationship of current fish companies 

- 2. Based on the visualization on Network, infer ownership or influence that a network

## 1 Getting Start

### 1.1 Package Preparation

```{r}
pacman::p_load(tidyverse, readtext, skimr, knitr,
               quanteda, tidytext, jsonlite, dplyr,
               tidyr, tidygraph, ggraph, igraph,
               visNetwork, ggplot2, gganimate, gridExtra)
```

## 2 Data Wangling

### 2.1 Data Import

```{r}
mc3_data <- fromJSON("data/MC3/mc3 1.json")
class(mc3_data)
```

### 2.2 Data Check

```{r}
mc3_edges <- as_tibble(mc3_data$link)
glimpse(mc3_edges)
```

```{r}
mc3_nodes <- as_tibble(mc3_data$nodes)
glimpse(mc3_nodes)
```

### 2.3 Data Filter

```{r}
mc3_edges_filt <- mc3_edges %>% select(type, source, target)
glimpse(mc3_edges_filt)
```

```{r}
mc3_nodes_filt <- mc3_nodes %>% select(type, id)
glimpse(mc3_nodes_filt)
```
### 2.4 Edges & Nodes Explore

```{r}
skim(mc3_edges_filt)
```



```{r}
p1 <- ggplot(data = mc3_edges_filt, aes(x = type, fill = type)) +
  geom_bar() + theme(axis.text.x = element_text(angle = 60, hjust = 1))
p1
```

```{r}
skim(mc3_nodes_filt)
```

```{r}
p2 <- ggplot(data = mc3_nodes_filt, aes(x = type, fill = type)) +
  geom_bar() + theme(axis.text.x = element_text(angle = 60, hjust = 1))
p2 
```

:::callout-tip
According to the VAST2024 - MC3 Data Description, the person node include Entity.Person and Entity.Person.CEO, the other were included in the Company.
:::

## 3 MC3 Task(3) 

Develop a visual approach to examine inferences. Infer how the influence of a company changes through time. Can you infer ownership and influence that a network may have?

::: callout-tip
Based on this plot, the edge types like {Shareholdership, BeneficialOwnership, WorksFor, FamilyRelationship} will be used, and the company name to define company; Meanwhile, the type in node like (Entity.Organization, Entity.Organization.Company, Entity.Organization.FishingCompany, Entity.Organization.LogisticsCompany, Entity.Organization.NewsCompany, Entity.Organization.FinancialCompany, Entity.Organization.NGO) will be used, source and target will be choosed to decide the "from" and "to".
:::

### 3.1 Relationship

#### 3.1.1 Nodes

The code chunk below will be used to extract the nodes data.frame of mc3_data and save it as a tibble data.frame called mc3_nodes.

```{r} 
mc3_nodes_clean <- as_tibble(mc3_data$nodes) %>%
  mutate(type = as.character(type),
         id = as.character(id)) %>%
  select(id, type)
kable(head(mc3_nodes_clean))
```

#### 3.1.2 Edges

The code chunk below will be used to extract the links data.frame of mc3_data and save it as a tibble data.frame called mc3_edges.

```{r}
mc3_edges_clean <- as_tibble(mc3_data$links) %>% 
  distinct() %>%
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
    summarise(weights = n()) %>%
  filter(source!=target) %>%
  ungroup()
kable(head(mc3_edges_clean))
```

### 3.2 Visualising network graph

First, create a graph object using tbl_graph() function. Then calculate betweenness and closeness centrality scores.

```{r}
mc3_graph <- tbl_graph(nodes = mc3_nodes_clean,
                       edges = mc3_edges_clean,
                       directed = FALSE) %>%
  mutate(betweenness_centrality = centrality_betweenness(),
         closeness_centrality = centrality_closeness())
```

We will filter nodes with high betweenness centrality scores (>8,000,000) and visualise them to see the relationships that they have.

```{r}
set.seed(1234)
mc3_graph %>%
  filter(betweenness_centrality >= 8000000) %>%
ggraph(layout = "fr") +
  geom_edge_link(aes(#width= weights,
                     alpha=0.5)) +
  geom_node_point(aes(
    size = betweenness_centrality,
    color = type,
    alpha = 0.3)) +
  geom_node_label(aes(label = id),repel=TRUE, size=2.5, alpha = 0.8) +
  scale_size_continuous(range=c(1,10)) +
  theme_graph() +
  labs(title = 'Initial network visualisation',
       subtitle = 'Entities with betweenness scores > 8,000,000')
```

Below is a dataframe showing us the top 10 entities with the highest betweenness scores.

```{r}
mc3_graph %>%  activate(nodes) %>%  as_tibble() %>% arrange(desc(betweenness_centrality)) %>% slice(1:10) %>% kable() 
```

The top 10 betweenness entities above are not dealing with relationship between fish companies. In the next section, we will filter entities into only organization entities. We may revisit the person entities later when we have specific targets/companies to investigate.

### 3.3 Exploring the VisNetwork

#### 3.3.1 Select the organization nodes

```{r}
mc3_nodes_select <- mc3_nodes_clean %>%
  filter(grepl("Entity\\.Organization", type, ignore.case = TRUE))
```

#### 3.3.2 Extract edges related to organization nodes

```{r}
mc3_edges_select <- mc3_edges_clean %>%
  filter(source %in% mc3_nodes_select$id | target %in% mc3_nodes_select$id) %>%
  distinct() %>%
  rename(from = source,
         to = target)
```

#### 3.3.3 Extract edges with high connection

```{r}
mc3_edges_select_high <- mc3_edges_select %>%
  group_by(from) %>%
  mutate(count = n()) %>%
  filter(count >= 8) %>%
  ungroup()
```

#### 3.3.4 Distinct source and target

```{r}
mc3_nodes_source <- mc3_edges_select_high %>%
  distinct(from) %>%
  rename(id = from)

mc3_nodes_target <- mc3_edges_select_high %>%
  distinct(to) %>%
  rename(id = to)
```

#### 3.3.5 Build visNetwork

```{r}
mc3_nodes_combined <- bind_rows(mc3_nodes_source, mc3_nodes_target)

# Assign group based on type
mc3_nodes_combined$group <- ifelse(mc3_nodes_combined$id %in% mc3_nodes_select$id, "Entity Organization", "Entity.Person")

# Visualize with visNetwork
visNetwork(mc3_nodes_combined, mc3_edges_select) %>%
  visPhysics(solver = "forceAtlas2Based",
             forceAtlas2Based = list(gravitationalConstant = -100)) %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  visGroups(groupname = "Entity Organization", color = "yellow") %>%
  visGroups(groupname = "Entity Person", color = "grey") %>%
  visLegend() %>%
  visEdges(arrows = "to") %>%
  visOptions(
    highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),
    nodesIdSelection = TRUE,
    selectedBy = "group",
    collapse = TRUE
  ) %>%
  visInteraction(dragNodes = TRUE, dragView = TRUE, zoomView = TRUE) %>%
  visEvents(selectNode = "function(properties) {
    var selectedNodeId = properties.nodes[0];
    this.body.data.nodes.update({id: selectedNodeId, color: {background: 'red', border: 'black'}});
  }")
```

It is interesting to find that there is one complicated center which connected entities like "Hart Ltd", "Johnson, Morales and Castro", which showed a high cooperation and organiztion between current fish companies. And it might be interested to dig the development based on timeline or the financial situation to define its influence. What's more, even if some points are on the very outside, they still have a sound connection with certain company maybe the supplier or retailer.


## 4. Conclusion

Exploring the networks between the various type of nodes or players in the space has been useful to visualising the relationships between the different parties. It has yielded interesting insights on how certain companies may influence the around companies.

For future work, the additional column of timeline and financial situation can be used to provide an additional layer of to the overall visualisation of networks and information in this project.